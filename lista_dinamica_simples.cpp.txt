#include <stdio.h>
#include <iostream>
#include <stdlib.h>
using namespace std;

struct No{
	int info;
	struct No *prox; //É um ponteiro apontando para o próximo nó!
};

void exibirLista();
void inserirLista(int elem);
struct No *cabeca=NULL;
struct No *ult;

main(){
	
	inserirLista(10);
	inserirLista(20);
	inserirLista(30);
	exibirLista();
}

void inserirLista(int elem){ // criação de função que não precisa devolver nada

	struct No *novo = (struct No*)malloc(sizeof(struct No)); // ele precisa de um struct no começo pra falar q tem q pegar o tamanho do struct q ta sendo definido pelo maloc 
	novo->info = elem; // pega o local do novo e coloca o elem no info 
	novo->prox = NULL; // sempre colocar o proximo prox como null pq ainda não tem o endereço do proximo
 
		if (cabeca == NULL){
			cabeca = novo; // cabeça recebe o local do do novo
		}
		else{
			ult->prox = novo; // pra onde o ultimo ta apontando vai receber o novo 
		}
		ult = novo; // depois recebe o novo
}

void exibirLista(){
	struct No *aux;
	aux = cabeca;
	
	cout << "Exibir na Lista \n";
	
	while(aux != NULL){
		printf("%x %i -> %x \n", aux, aux->info, aux->prox); // mostra o local do arquivo a informação e pra onde ta sendo apontado 
		aux = aux->prox;
	}
}



